{"ast":null,"code":"var _jsxFileName = \"/Users/kamil/Desktop/Programowanie/StronaTata/aqua_company/src/components/Services/Card/Card.js\";\nimport React, { useState } from 'react';\nimport './Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  title,\n  galleryImage,\n  details\n}) {\n  console.clear();\n  var slideDelay = 5.5;\n  var slideDuration = 0.3;\n  var slides = document.querySelectorAll(\".slide\");\n  var prevButton = document.querySelector(\"#prevButton\");\n  var nextButton = document.querySelector(\"#nextButton\");\n  var numSlides = slides.length;\n\n  for (var i = 0; i < numSlides; i++) {\n    TweenLite.set(slides[i], {\n      backgroundColor: Math.random() * 0xffffff,\n      xPercent: i * 100\n    });\n  }\n\n  var wrap = wrapPartial(-100, (numSlides - 1) * 100);\n  var timer = TweenLite.delayedCall(slideDelay, autoPlay);\n  var animation = TweenMax.to(slides, 1, {\n    xPercent: \"+=\" + numSlides * 100,\n    ease: Linear.easeNone,\n    paused: true,\n    repeat: -1,\n    modifiers: {\n      xPercent: wrap\n    }\n  });\n  var proxy = document.createElement(\"div\");\n  TweenLite.set(proxy, {\n    x: \"+=0\"\n  });\n  var transform = proxy._gsTransform;\n  var slideAnimation = TweenLite.to({}, 0.1, {});\n  var slideWidth = 0;\n  var wrapWidth = 0;\n  resize();\n  var draggable = new Draggable(proxy, {\n    trigger: \".slides-container\",\n    throwProps: true,\n    onPress: updateDraggable,\n    onDrag: updateProgress,\n    onThrowUpdate: updateProgress,\n    snap: {\n      x: snapX\n    }\n  });\n  window.addEventListener(\"resize\", resize);\n  prevButton.addEventListener(\"click\", function () {\n    animateSlides(1);\n  });\n  nextButton.addEventListener(\"click\", function () {\n    animateSlides(-1);\n  });\n\n  function updateDraggable() {\n    timer.restart(true);\n    slideAnimation.kill();\n    this.update();\n  }\n\n  function animateSlides(direction) {\n    timer.restart(true);\n    slideAnimation.kill();\n    var x = snapX(transform.x + direction * slideWidth);\n    slideAnimation = TweenLite.to(proxy, slideDuration, {\n      x: x,\n      onUpdate: updateProgress\n    });\n  }\n\n  function autoPlay() {\n    if (draggable.isPressed || draggable.isDragging || draggable.isThrowing) {\n      timer.restart(true);\n    } else {\n      animateSlides(-1);\n    }\n  }\n\n  function updateProgress() {\n    animation.progress(transform.x / wrapWidth);\n  }\n\n  function snapX(x) {\n    return Math.round(x / slideWidth) * slideWidth;\n  }\n\n  function resize() {\n    var norm = transform.x / wrapWidth || 0;\n    slideWidth = slides[0].offsetWidth;\n    wrapWidth = slideWidth * numSlides;\n    TweenLite.set(proxy, {\n      x: norm * wrapWidth\n    });\n    animateSlides(0);\n    slideAnimation.progress(1);\n  }\n\n  function wrapPartial(min, max) {\n    var r = max - min;\n    return function (value) {\n      var v = value - min;\n      return (r + v % r) % r + min;\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__gallery\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slides-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slides\",\n          children: \"123\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slides\",\n          children: \"321\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slides\",\n          children: \"3332211\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"prevButton\",\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"nextButton\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__opinion\",\n      children: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/kamil/Desktop/Programowanie/StronaTata/aqua_company/src/components/Services/Card/Card.js"],"names":["React","useState","Card","title","galleryImage","details","console","clear","slideDelay","slideDuration","slides","document","querySelectorAll","prevButton","querySelector","nextButton","numSlides","length","i","TweenLite","set","backgroundColor","Math","random","xPercent","wrap","wrapPartial","timer","delayedCall","autoPlay","animation","TweenMax","to","ease","Linear","easeNone","paused","repeat","modifiers","proxy","createElement","x","transform","_gsTransform","slideAnimation","slideWidth","wrapWidth","resize","draggable","Draggable","trigger","throwProps","onPress","updateDraggable","onDrag","updateProgress","onThrowUpdate","snap","snapX","window","addEventListener","animateSlides","restart","kill","update","direction","onUpdate","isPressed","isDragging","isThrowing","progress","round","norm","offsetWidth","min","max","r","value","v"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './Card.css'\nfunction Card({title, galleryImage, details}) {\n\n\n\n\n\n  console.clear();\n\nvar slideDelay = 5.5;\nvar slideDuration = 0.3;\n\nvar slides = document.querySelectorAll(\".slide\");\nvar prevButton = document.querySelector(\"#prevButton\");\nvar nextButton = document.querySelector(\"#nextButton\");\n\nvar numSlides = slides.length;\n\nfor (var i = 0; i < numSlides; i++) {\n  TweenLite.set(slides[i], {\n    backgroundColor: Math.random() * 0xffffff,\n    xPercent: i * 100\n  });\n}\n\nvar wrap = wrapPartial(-100, (numSlides - 1) * 100);\nvar timer = TweenLite.delayedCall(slideDelay, autoPlay);\n\nvar animation = TweenMax.to(slides, 1, {\n  xPercent: \"+=\" + (numSlides * 100),\n  ease: Linear.easeNone,\n  paused: true,\n  repeat: -1,\n  modifiers: {\n    xPercent: wrap\n  }\n});\n\nvar proxy = document.createElement(\"div\");\nTweenLite.set(proxy, { x: \"+=0\" });\nvar transform = proxy._gsTransform;\nvar slideAnimation = TweenLite.to({}, 0.1, {});\nvar slideWidth = 0;\nvar wrapWidth = 0;\nresize();\n\nvar draggable = new Draggable(proxy, {\n  trigger: \".slides-container\",\n  throwProps: true,\n  onPress: updateDraggable,\n  onDrag: updateProgress,\n  onThrowUpdate: updateProgress,\n  snap: {     \n    x: snapX\n  }\n});\n\nwindow.addEventListener(\"resize\", resize);\n\nprevButton.addEventListener(\"click\", function() {\n  animateSlides(1);\n});\n\nnextButton.addEventListener(\"click\", function() {\n  animateSlides(-1);\n});\n\nfunction updateDraggable() {\n  \n  timer.restart(true);\n  slideAnimation.kill();\n  this.update();\n}\n\nfunction animateSlides(direction) {\n    \n  timer.restart(true);\n  slideAnimation.kill();\n  \n  var x = snapX(transform.x + direction * slideWidth);\n  \n  slideAnimation = TweenLite.to(proxy, slideDuration, {\n    x: x,\n    onUpdate: updateProgress\n  });  \n}\n\nfunction autoPlay() {  \n    \n  if (draggable.isPressed || draggable.isDragging || draggable.isThrowing) {\n    timer.restart(true);\n  } else {\n    animateSlides(-1);\n  }\n}\n\nfunction updateProgress() {  \n  animation.progress(transform.x / wrapWidth);\n}\n\nfunction snapX(x) {\n  return Math.round(x / slideWidth) * slideWidth;\n}\n\nfunction resize() {\n  \n  var norm = (transform.x / wrapWidth) || 0;\n  \n  slideWidth = slides[0].offsetWidth;\n  wrapWidth = slideWidth * numSlides;\n  \n  TweenLite.set(proxy, {\n    x: norm * wrapWidth\n  });\n  \n  animateSlides(0);\n  slideAnimation.progress(1);\n}\n\nfunction wrapPartial(min, max) {  \n  var r = max - min;  \n  return function(value) {\n    var v = value - min;\n    return ((r + v % r) % r) + min;\n  }\n}\n\n\n\n\n\n\n\n\n  return (\n      <section className=\"card\">\n        <div className=\"card__title\">{title}</div>\n        \n        <div className=\"card__gallery\">\n          <div className=\"slides-container\">\n            <div className=\"slides\">123</div>\n            <div className=\"slides\">321</div>\n            <div className=\"slides\">3332211</div>\n          </div>\n  \n          <div class=\"controls\">\n            <button id=\"prevButton\">Prev</button>\n            <button id=\"nextButton\">Next</button>\n          </div>\n        \n        </div>\n        \n        <div className=\"card__opinion\">3</div>\n     </section>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}