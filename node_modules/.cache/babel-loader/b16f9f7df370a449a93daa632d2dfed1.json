{"ast":null,"code":"var _jsxFileName = \"/Users/kamil/Desktop/Programowanie/StronaTata/aqua_company/src/components/test/test.js\";\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport './test.css';\nimport { gsap, Power1 } from \"gsap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseEffect(() => {\n  var slideDelay = 1.5;\n  var slideDuration = 99999.3;\n  var snapX;\n  var slides = document.querySelectorAll(\".slide\");\n  var prevButton = document.querySelector(\"#prevButton\");\n  var nextButton = document.querySelector(\"#nextButton\");\n  var progressWrap = gsap.utils.wrap(0, 1);\n  var numSlides = slides.length;\n  gsap.set(slides, {\n    backgroundColor: \"random([red, blue, green, purple, orange, yellow, lime, pink])\",\n    xPercent: i => i * 100\n  });\n  var wrap = gsap.utils.wrap(-100, (numSlides - 1) * 100);\n  var timer = gsap.delayedCall(slideDelay);\n  var animation = gsap.to(slides, {\n    xPercent: \"+=\" + numSlides * 100,\n    duration: 1,\n    ease: \"none\",\n    paused: true,\n    repeat: -1,\n    modifiers: {\n      xPercent: wrap\n    }\n  });\n  var proxy = document.createElement(\"div\");\n  var slideAnimation = gsap.to({}, {});\n  var slideWidth = 0;\n  var wrapWidth = 0;\n  resize();\n  window.addEventListener(\"resize\", resize);\n  prevButton.addEventListener(\"click\", function () {\n    animateSlides(1);\n  });\n  nextButton.addEventListener(\"click\", function () {\n    animateSlides(-1);\n  });\n\n  function updateDraggable() {\n    timer.restart(true);\n    slideAnimation.kill();\n    this.update();\n  }\n\n  function animateSlides(direction) {\n    timer.restart(true);\n    slideAnimation.kill();\n    var x = snapX(gsap.getProperty(proxy, \"x\") + direction * slideWidth);\n    slideAnimation = gsap.to(proxy, {\n      x: x,\n      duration: slideDuration,\n      onUpdate: updateProgress\n    });\n  }\n\n  function updateProgress() {\n    animation.progress(progressWrap(gsap.getProperty(proxy, \"x\") / wrapWidth));\n  }\n\n  function resize() {\n    var norm = gsap.getProperty(proxy, \"x\") / wrapWidth || 0;\n    slideWidth = slides[0].offsetWidth;\n    wrapWidth = slideWidth * numSlides;\n    snapX = gsap.utils.snap(slideWidth);\n    gsap.set(proxy, {\n      x: norm * wrapWidth\n    });\n    animateSlides(0);\n    slideAnimation.progress(1);\n  }\n});\nexport default function test() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"slides-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"slides-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"slide\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"slide\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"slide\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"slide\",\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"slide\",\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"slide\",\n            children: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"slide\",\n            children: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"slide\",\n            children: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"slide\",\n            children: \"9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"slide\",\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"prevButton\",\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"nextButton\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/kamil/Desktop/Programowanie/StronaTata/aqua_company/src/components/test/test.js"],"names":["React","useState","useRef","useCallback","useEffect","gsap","Power1","slideDelay","slideDuration","snapX","slides","document","querySelectorAll","prevButton","querySelector","nextButton","progressWrap","utils","wrap","numSlides","length","set","backgroundColor","xPercent","i","timer","delayedCall","animation","to","duration","ease","paused","repeat","modifiers","proxy","createElement","slideAnimation","slideWidth","wrapWidth","resize","window","addEventListener","animateSlides","updateDraggable","restart","kill","update","direction","x","getProperty","onUpdate","updateProgress","progress","norm","offsetWidth","snap","test"],"mappings":"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","sourcesContent":["\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport './test.css'\nimport { gsap, Power1 } from \"gsap\";\n\n\n\nuseEffect(()=>{\nvar slideDelay = 1.5;\nvar slideDuration = 99999.3;\nvar snapX;\n\nvar slides = document.querySelectorAll(\".slide\");\nvar prevButton = document.querySelector(\"#prevButton\");\nvar nextButton = document.querySelector(\"#nextButton\");\nvar progressWrap = gsap.utils.wrap(0, 1);\n\nvar numSlides = slides.length;\n\ngsap.set(slides, {\n  backgroundColor: \"random([red, blue, green, purple, orange, yellow, lime, pink])\",\n  xPercent: i => i * 100\n});\n\nvar wrap = gsap.utils.wrap(-100, (numSlides - 1) * 100);\nvar timer = gsap.delayedCall(slideDelay);\n\nvar animation = gsap.to(slides, {\n  xPercent: \"+=\" + (numSlides * 100),\n  duration: 1,\n  ease: \"none\",\n  paused: true,\n  repeat: -1,\n  modifiers: {\n    xPercent: wrap\n  }\n});\n\nvar proxy = document.createElement(\"div\");\nvar slideAnimation = gsap.to({}, {});\nvar slideWidth = 0;\nvar wrapWidth = 0;\nresize();\n\n\nwindow.addEventListener(\"resize\", resize);\n\nprevButton.addEventListener(\"click\", function() {\n  animateSlides(1);\n});\n\nnextButton.addEventListener(\"click\", function() {\n  animateSlides(-1);\n});\n\nfunction updateDraggable() {\n  timer.restart(true);\n  slideAnimation.kill();\n  this.update();\n}\n\nfunction animateSlides(direction) {\n    \n  timer.restart(true);\n  slideAnimation.kill();\n  \n  var x = snapX(gsap.getProperty(proxy, \"x\") + direction * slideWidth);\n  \n  slideAnimation = gsap.to(proxy, {\n    x: x,\n    duration: slideDuration,\n    onUpdate: updateProgress\n  });  \n}\n\n\n\nfunction updateProgress() { \n  animation.progress(progressWrap(gsap.getProperty(proxy, \"x\") / wrapWidth));\n}\n\nfunction resize() {\n  \n  var norm = (gsap.getProperty(proxy, \"x\") / wrapWidth) || 0;\n  \n  slideWidth = slides[0].offsetWidth;\n  wrapWidth = slideWidth * numSlides;\n  snapX = gsap.utils.snap(slideWidth);\n  \n  gsap.set(proxy, {\n    x: norm * wrapWidth\n  });\n  \n  animateSlides(0);\n  slideAnimation.progress(1);\n}\n})\n\nexport default function test() {\n    return (\n        <div>\n            <main>\n   \n   <div class=\"slides-container\">\n     <div class=\"slides-inner\">\n       <div class=\"slide\">1</div>\n       <div class=\"slide\">2</div>\n       <div class=\"slide\">3</div>\n       <div class=\"slide\">4</div>\n       <div class=\"slide\">5</div>\n       <div class=\"slide\">6</div>\n       <div class=\"slide\">7</div>\n       <div class=\"slide\">8</div>\n       <div class=\"slide\">9</div>\n       <div class=\"slide\">10</div>\n     </div>\n   </div>\n   \n   <div class=\"controls\">\n     <button id=\"prevButton\">Prev</button>\n     <button id=\"nextButton\">Next</button>\n   </div>\n   \n </main>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}