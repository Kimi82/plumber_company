{"ast":null,"code":"var _jsxFileName = \"/Users/kamil/Desktop/Programowanie/StronaTata/aqua_company/src/components/Realizations/Realizations.js\";\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport './Realizations.css';\nimport { gsap, Power1 } from \"gsap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Realizations() {\n  const sliderData = [{\n    title: \"title1\",\n    description: \"desc1\",\n    image: \"https://images.adsttc.com/media/images/5ef1/1e6c/b357/658c/7f00/03bf/medium_jpg/131_ACME_005_Marsa_Plaza_Francisco_Nogueira.jpg?1592860233\"\n  }, {\n    title: \"title2\",\n    description: \"desc2\",\n    image: \"zdjeciedodac\"\n  }, {\n    title: \"title3\",\n    description: \"desc3\",\n    image: \"https://upload.wikimedia.org/wikipedia/commons/9/95/Big_Pine_landscape.jpg\"\n  }];\n  gsap.registerPlugin(InertiaPlugin);\n  var slideDelay = 1.5;\n  var slideDuration = 99999.3;\n  var snapX;\n  var slides = document.querySelectorAll(\".slide\");\n  var prevButton = document.querySelector(\"#prevButton\");\n  var nextButton = document.querySelector(\"#nextButton\");\n  var progressWrap = gsap.utils.wrap(0, 1);\n  var numSlides = slides.length;\n  gsap.set(slides, {\n    backgroundColor: \"random([red, blue, green, purple, orange, yellow, lime, pink])\",\n    xPercent: i => i * 100\n  });\n  var wrap = gsap.utils.wrap(-100, (numSlides - 1) * 100);\n  var timer = gsap.delayedCall(slideDelay, autoPlay);\n  var animation = gsap.to(slides, {\n    xPercent: \"+=\" + numSlides * 100,\n    duration: 1,\n    ease: \"none\",\n    paused: true,\n    repeat: -1,\n    modifiers: {\n      xPercent: wrap\n    }\n  });\n  var proxy = document.createElement(\"div\");\n  var slideAnimation = gsap.to({}, {});\n  var slideWidth = 0;\n  var wrapWidth = 0;\n  resize();\n  var draggable = new Draggable(proxy, {\n    trigger: \".slides-container\",\n    inertia: true,\n    onPress: updateDraggable,\n    onDrag: updateProgress,\n    onThrowUpdate: updateProgress,\n    snap: {\n      x: snapX\n    }\n  });\n  window.addEventListener(\"resize\", resize);\n  prevButton.addEventListener(\"click\", function () {\n    animateSlides(1);\n  });\n  nextButton.addEventListener(\"click\", function () {\n    animateSlides(-1);\n  });\n\n  function updateDraggable() {\n    timer.restart(true);\n    slideAnimation.kill();\n    this.update();\n  }\n\n  function animateSlides(direction) {\n    timer.restart(true);\n    slideAnimation.kill();\n    var x = snapX(gsap.getProperty(proxy, \"x\") + direction * slideWidth);\n    slideAnimation = gsap.to(proxy, {\n      x: x,\n      duration: slideDuration,\n      onUpdate: updateProgress\n    });\n  }\n\n  function autoPlay() {\n    if (draggable.isPressed || draggable.isDragging || draggable.isThrowing) {\n      timer.restart(true);\n    } else {\n      animateSlides(-1);\n    }\n  }\n\n  function updateProgress() {\n    animation.progress(progressWrap(gsap.getProperty(proxy, \"x\") / wrapWidth));\n  }\n\n  function resize() {\n    var norm = gsap.getProperty(proxy, \"x\") / wrapWidth || 0;\n    slideWidth = slides[0].offsetWidth;\n    wrapWidth = slideWidth * numSlides;\n    snapX = gsap.utils.snap(slideWidth);\n    gsap.set(proxy, {\n      x: norm * wrapWidth\n    });\n    animateSlides(0);\n    slideAnimation.progress(1);\n  }\n\n  const buttonsValue = [\">\", \"<\"];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"realization\",\n    id: \"realizations\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"realization__current\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"realization__currentText\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"realization__currentTextTitle\",\n          children: \"Robota numer1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"realization__currentTextBody\",\n          children: \"Tutaj opis tej roboty i tka dalej i tak dalej\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"realization__currentImageWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"realization__currentImage\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"slide\",\n            src: sliderData[0].image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"realization__next\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"realization__nextImageWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"realization__nextImage\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sliderData[2].image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"realization__nextText\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"realization__nextTextTitle\",\n          children: \"NEXT PROJECT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"realization__nextTextBody\",\n          children: \"Name Of the Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"realization__nextButtons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"realization__nextButton realization__nextButton--next\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"realization__nextButtonArrow\",\n            children: buttonsValue[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"realization__nextButton realization__nextButton--prev\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"realization__nextButtonArrow\",\n            children: buttonsValue[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Realizations;\nexport default Realizations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Realizations\");","map":{"version":3,"sources":["/Users/kamil/Desktop/Programowanie/StronaTata/aqua_company/src/components/Realizations/Realizations.js"],"names":["React","useState","useRef","useCallback","useEffect","gsap","Power1","Realizations","sliderData","title","description","image","registerPlugin","InertiaPlugin","slideDelay","slideDuration","snapX","slides","document","querySelectorAll","prevButton","querySelector","nextButton","progressWrap","utils","wrap","numSlides","length","set","backgroundColor","xPercent","i","timer","delayedCall","autoPlay","animation","to","duration","ease","paused","repeat","modifiers","proxy","createElement","slideAnimation","slideWidth","wrapWidth","resize","draggable","Draggable","trigger","inertia","onPress","updateDraggable","onDrag","updateProgress","onThrowUpdate","snap","x","window","addEventListener","animateSlides","restart","kill","update","direction","getProperty","onUpdate","isPressed","isDragging","isThrowing","progress","norm","offsetWidth","buttonsValue"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport './Realizations.css'\nimport { gsap, Power1 } from \"gsap\";\n\nfunction Realizations() {\n\n  const sliderData = [\n    {\n      title: \"title1\",\n      description: \"desc1\",\n      image: \"https://images.adsttc.com/media/images/5ef1/1e6c/b357/658c/7f00/03bf/medium_jpg/131_ACME_005_Marsa_Plaza_Francisco_Nogueira.jpg?1592860233\",\n    },\n    {\n      title: \"title2\",\n      description: \"desc2\",\n      image: \"zdjeciedodac\",\n    },\n    {\n      title: \"title3\",\n      description: \"desc3\",\n      image: \"https://upload.wikimedia.org/wikipedia/commons/9/95/Big_Pine_landscape.jpg\",\n    },\n  ]\n\n\ngsap.registerPlugin( InertiaPlugin);\n\nvar slideDelay = 1.5;\nvar slideDuration = 99999.3;\nvar snapX;\n\nvar slides = document.querySelectorAll(\".slide\");\nvar prevButton = document.querySelector(\"#prevButton\");\nvar nextButton = document.querySelector(\"#nextButton\");\nvar progressWrap = gsap.utils.wrap(0, 1);\n\nvar numSlides = slides.length;\n\ngsap.set(slides, {\n  backgroundColor: \"random([red, blue, green, purple, orange, yellow, lime, pink])\",\n  xPercent: i => i * 100\n});\n\nvar wrap = gsap.utils.wrap(-100, (numSlides - 1) * 100);\nvar timer = gsap.delayedCall(slideDelay, autoPlay);\n\nvar animation = gsap.to(slides, {\n  xPercent: \"+=\" + (numSlides * 100),\n  duration: 1,\n  ease: \"none\",\n  paused: true,\n  repeat: -1,\n  modifiers: {\n    xPercent: wrap\n  }\n});\n\nvar proxy = document.createElement(\"div\");\nvar slideAnimation = gsap.to({}, {});\nvar slideWidth = 0;\nvar wrapWidth = 0;\nresize();\n\nvar draggable = new Draggable(proxy, {\n  trigger: \".slides-container\",\n  inertia: true,\n  onPress: updateDraggable,\n  onDrag: updateProgress,\n  onThrowUpdate: updateProgress,\n  snap: {     \n    x: snapX\n  }\n});\n\nwindow.addEventListener(\"resize\", resize);\n\nprevButton.addEventListener(\"click\", function() {\n  animateSlides(1);\n});\n\nnextButton.addEventListener(\"click\", function() {\n  animateSlides(-1);\n});\n\nfunction updateDraggable() {\n  timer.restart(true);\n  slideAnimation.kill();\n  this.update();\n}\n\nfunction animateSlides(direction) {\n    \n  timer.restart(true);\n  slideAnimation.kill();\n  \n  var x = snapX(gsap.getProperty(proxy, \"x\") + direction * slideWidth);\n  \n  slideAnimation = gsap.to(proxy, {\n    x: x,\n    duration: slideDuration,\n    onUpdate: updateProgress\n  });  \n}\n\nfunction autoPlay() {  \n  if (draggable.isPressed || draggable.isDragging || draggable.isThrowing) {\n    timer.restart(true);\n  } else {\n    animateSlides(-1);\n  }\n}\n\nfunction updateProgress() { \n  animation.progress(progressWrap(gsap.getProperty(proxy, \"x\") / wrapWidth));\n}\n\nfunction resize() {\n  \n  var norm = (gsap.getProperty(proxy, \"x\") / wrapWidth) || 0;\n  \n  slideWidth = slides[0].offsetWidth;\n  wrapWidth = slideWidth * numSlides;\n  snapX = gsap.utils.snap(slideWidth);\n  \n  gsap.set(proxy, {\n    x: norm * wrapWidth\n  });\n  \n  animateSlides(0);\n  slideAnimation.progress(1);\n}\n\n  \n \nconst buttonsValue =[\">\", \"<\"]\n  return (\n      <section className=\"realization\"  id=\"realizations\">\n     \n        <div className=\"realization__current\">\n          <div className=\"realization__currentText\">\n            <h1 className=\"realization__currentTextTitle\">Robota numer1</h1>\n            <h3 className=\"realization__currentTextBody\">Tutaj opis tej roboty i tka dalej i tak dalej</h3>\n          </div>\n           <div className=\"realization__currentImageWrapper\" >\n            <div className=\"realization__currentImage\">\n            <img className=\"slide\" src={sliderData[0].image}/>\n            </div>\n           </div> \n        </div>\n        \n        <div className=\"realization__next\">\n          {/* <div className=\"realization__nextImage\">THERE WILL BE NEXT IMAGE</div> */}\n          <div className=\"realization__nextImageWrapper\" >\n          <div className=\"realization__nextImage\"> \n           <img src={sliderData[2].image}/>\n           </div>\n          </div>\n          <div className=\"realization__nextText\">\n            <h3  className=\"realization__nextTextTitle\">NEXT PROJECT</h3>\n            <h3  className=\"realization__nextTextBody\">Name Of the Project</h3>\n          </div>\n          <div className=\"realization__nextButtons\">\n            <div className=\"realization__nextButton realization__nextButton--next\">\n              <span className=\"realization__nextButtonArrow\" >{buttonsValue[0]}</span></div>\n            <div className=\"realization__nextButton realization__nextButton--prev\">\n              <span className=\"realization__nextButtonArrow\">{buttonsValue[1]}</span></div>\n          </div>\n        </div>\n     \n     </section>\n  );\n}\n\nexport default Realizations;"]},"metadata":{},"sourceType":"module"}