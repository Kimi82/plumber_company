{"ast":null,"code":"var _jsxFileName = \"/Users/kamil/Desktop/Programowanie/StronaTata/aqua_company/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js';\nimport About from './components/About/About.js';\nimport Services from './components/Services/Services.js';\nimport Realizations from './components/Realizations/Realizations.js';\nimport Contact from './components/Contact/Contact.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const useIntersection = (element, rootMargin) => {\n    _s();\n\n    const [isVisible, setState] = useState(false);\n    useEffect(() => {\n      const observer = new IntersectionObserver(([entry]) => {\n        setState(entry.isIntersecting);\n      }, {\n        rootMargin\n      });\n      element && observer.observe(element);\n      return () => observer.unobserve(element);\n    }, []);\n    return isVisible;\n  };\n\n  _s(useIntersection, \"5R1xbWnHZgN6IJwIT2fnd8u5KWs=\");\n\n  const ref = useRef();\n  const inViewport = useIntersection(ref, '0px'); // Trigger as soon as the element becomes visible\n\n  if (inViewport) {\n    console.log('in viewport:', ref.current);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Services, {\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Realizations, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(App, \"oTIC4KBb1PsRq/Y3A8D//REuPcU=\", false, function () {\n  return [useIntersection];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kamil/Desktop/Programowanie/StronaTata/aqua_company/src/App.js"],"names":["React","useState","useEffect","useRef","BrowserRouter","Router","Switch","Route","Navigation","About","Services","Realizations","Contact","App","useIntersection","element","rootMargin","isVisible","setState","observer","IntersectionObserver","entry","isIntersecting","observe","unobserve","ref","inViewport","console","log","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAsD,kBAAtD;AAEA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,OAAP,MAAoB,iCAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAAA;;AAEb,QAAMC,eAAe,GAAG,CAACC,OAAD,EAAUC,UAAV,KAAyB;AAAA;;AAC/C,UAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AAEAC,IAAAA,SAAS,CAAC,MAAM;AACZ,YAAMiB,QAAQ,GAAG,IAAIC,oBAAJ,CACb,CAAC,CAACC,KAAD,CAAD,KAAa;AACTH,QAAAA,QAAQ,CAACG,KAAK,CAACC,cAAP,CAAR;AACH,OAHY,EAGV;AAAEN,QAAAA;AAAF,OAHU,CAAjB;AAMAD,MAAAA,OAAO,IAAII,QAAQ,CAACI,OAAT,CAAiBR,OAAjB,CAAX;AAEA,aAAO,MAAMI,QAAQ,CAACK,SAAT,CAAmBT,OAAnB,CAAb;AACH,KAVQ,EAUN,EAVM,CAAT;AAYA,WAAOE,SAAP;AACD,GAhBD;;AAFa,KAEPH,eAFO;;AAmBT,QAAMW,GAAG,GAAGtB,MAAM,EAAlB;AACA,QAAMuB,UAAU,GAAGZ,eAAe,CAACW,GAAD,EAAM,KAAN,CAAlC,CApBS,CAoBuC;;AAChD,MAAIC,UAAJ,EAAgB;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,GAAG,CAACI,OAAhC;AACH;;AAGH,sBAEM;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,GAAG,EAAEJ;AAAf;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFN;AAWD;;IArCQZ,G;UAoBgBC,e;;;KApBhBD,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport './App.css'\nimport Navigation from './components/Navigation/Navigation.js'\nimport About from './components/About/About.js'\nimport Services from './components/Services/Services.js'\nimport Realizations from './components/Realizations/Realizations.js'\nimport Contact from './components/Contact/Contact.js'\n\nfunction App() {\n\n  const useIntersection = (element, rootMargin) => {\n    const [isVisible, setState] = useState(false);\n  \n    useEffect(() => {\n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                setState(entry.isIntersecting);\n            }, { rootMargin }\n        );\n  \n        element && observer.observe(element);\n  \n        return () => observer.unobserve(element);\n    }, []);\n  \n    return isVisible;\n  };\n      const ref = useRef();\n      const inViewport = useIntersection(ref, '0px'); // Trigger as soon as the element becomes visible\n      if (inViewport) {\n        console.log('in viewport:', ref.current);\n    }\n\n\n  return (\n     \n        <div className=\"main__wrapper\">\n          <Navigation/>\n          <About/>\n          <Services ref={ref}/>\n          <Realizations/>\n          <Contact/>\n        </div>\n     \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}